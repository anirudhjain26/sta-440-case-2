---
title: "STA 440 Case 2"
author: "Krish Bansal, Lily Seelig, Anirudh Jain"
# format: pdf
format: 
  pdf:
    documentclass: article 
    fontsize: 11pt         
    classoption: oneside       
editor: visual
geometry: margin=1in
title-block-spacing: compact
execute: 
  echo: false
  warning: false
  message: false
---

```{r, message=FALSE}
# imports
library(readr)
library(tidyverse)
library(patchwork)
library(scales)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
library(broom)
library(car)
library(lme4)
library(lmerTest)
```

## Background

Mitochondria play a central role in cellular energy metabolism, and alterations in their molecular structures san translate into measurable physiological phenotypes. Characterizing how mitochondrial efficiency changes under different conditions provides important insights into metabolic function and disease mechanisms. 

To this end, researchers often measure mitochondrial respiration under a variety of experimental settings. Multiplexed metabolic assay platforms allow simultaneous evaluation of several aspects of mitochondrial functions across substrates, redox conditions, and energetic states. One critical readout is oxygen flux (JO2), which serves as a direct indicator of mitochondrial respiratory activity. Comparing oxygen flux between experimental groups such as non transgenic and transgenic mice provides a way to evaluate whether genetic differences are associated with altered mitochondrial functions. 

Our analysis focuses on modeling and testing for genotype effects on oxygen flux, while accounting for experimental design factors such as substrate type. The aim is to determine whether mitochondrial efficiency differs by genotype, and whether such effects depend on substrate choice or dose.

## Data

The data for this study was collected from skeletal muscle mitochondria that are isolated from either non-transgenic or transgenic mice, measured during the mitochondrial energy transduction process. For our model we took into account two main factors: substrate type and dose.The primary factor we are interested in is genotype (non transgenic vs transgenic). Substrate and dose serve as design factors, and their interactions with genotype are of central interest in assessing whether genetic differences in mitochondrial function vary across energetic states or substrate conditions. 

The data we were given originally was in a wide format, so we transformed it into a tidy long format for analysis. We also dropped the basal values since they represent the idle state. Some values were missing so we dropped them.

## Exploratory Data Analysis

## Model Rationale

We employed a sequence of models to evaluate the effects of genotype, substrate, and workload (ΔGATP) on oxygen flux (JO₂). Each model was chosen to address a specific aspect of the experimental design and to progressively incorporate complexity and biological realism.

#### Baseline model (lm(JO2 \~ Substrate \* Dose)

This model considers only substrate and dose effects, ignoring genotype. It serves as a sanity check to establish whether fuel type and workload influence JO₂ as expected. Its main advantage is simplicity and interpretability, but it does not address the central research question concerning genotype differences.

#### Genotype-only model (lm(JO2 \~ Genotype)

This specification provides a crude comparison of JO₂ between NT and Tg mice by collapsing across all experimental conditions. It is useful as an initial test for an overall genotype effect, but it oversimplifies by ignoring the role of substrate and workload.

#### Full factorial model (lm(JO2 \~ Genotype \* Substrate \* Dose)

This model incorporates genotype, substrate, dose, and all interactions. It allows us to examine whether genotype effects vary across substrates or workload levels. The advantage of this approach is that it captures the complexity of the biology, including higher-order interactions. However, it treats each observation as independent and does not account for repeated measures on the same subject, which violates design assumptions.

#### Mixed-effects model (preferred; lmer(JO2 \~ Genotype \* Substrate \* Dose + (1 \| Subject)

The mixed model includes genotype, substrate, and dose as fixed effects, while adding a random intercept for the subject. This structure accounts for repeated measures within the same mouse and preserves independence across subjects. It balances interpretability with statistical validity, enabling us to test population-level effects while controlling for subject-level variability. Its main limitation is reduced power to detect high-order interactions, given the modest sample size (6 NT, 6 Tg).

While simpler models provided useful descriptive insights, they failed to fully respect the experimental design. The baseline and genotype-only models ignored key sources of variation, while the full factorial model captured interaction effects but treated repeated measures from the same subject as independent, inflating the risk of false positives. The mixed-effects model addressed these shortcomings by incorporating subject-level random effects, thereby accounting for within-mouse correlation while still testing the joint effects of genotype, substrate, and workload at the population level. This framework provides the most statistically rigorous and biologically meaningful analysis of our dataset, balancing model complexity with the need to respect the hierarchical structure of the data.

## Model Implementation and Evaluation

## Results

## Limitations

There are several limitations of this analysis that should be considered when interpreting the results. First, the analysis focused exclusively on the dose-response slopes of the mitochondrial oxygen flux (JO2) after dropping basal condition. Additionally, the analysis is limited to mitochondrial oxygen flux and does not consider other relevant outcomes like reactive oxygen species, membrane potential, and redox state. Also, although the model accounted for some heteroscedasticity, the increasing variance of the JO2 with higher mean values was only partially addressed and may still affect estimates. 

The study was also limited by sample size (6 non-transgenic mice and 6 transgenic mice) which reduces the statistical power, particularly for detecting complex interactions or subtle nonlinearities. To account for this, the analysis assumed a linear relationship between the free energy of ATP hydrolysis and JO2 across the studied range. While the assumption appeared reasonable within the available data, nonlinear responses outside of the observed range cannot be ruled out. Finally, the mixed effects modeling approach included random intercepts to capture subject level variability but did not incorporate random slopes, potentially underestimating within subject differences in dose response patterns. However, residuals were approximately normal after accounting for fixed effects, and the assumption of independence across subjects was reasonable given the experimental design. 

## Conclusions

\newpage

# Appendix

```{r, message=FALSE}

raw <- read_csv("data/JO2.csv", col_names = FALSE, show_col_types = FALSE)

header1 <- as.character(unlist(raw[1, ])) # substrates in row 1
header2 <- as.character(unlist(raw[2, ])) # doses in row 2

sub <- header1
sub[1] <- "Subject"
for (i in 2:length(sub)) {
    if (is.na(sub[i]) || sub[i] == "") sub[i] <- sub[i - 1]
}

dose <- header2
dose[1] <- NA # first col is Subject

new_names <- c("Subject", paste(sub[-1], dose[-1], sep = "_"))

dat <- raw[-c(1, 2), ]
names(dat) <- new_names
dat <- dat |> mutate(across(-Subject, ~ suppressWarnings(as.numeric(.))))

data_long <- dat |>
    pivot_longer(
        cols = -Subject,
        names_to = c("Substrate", "Dose"),
        names_sep = "_",
        values_to = "JO2"
    ) |>
    filter(!(Dose %in% c("Basal", "-12.95"))) |>
    mutate(
        Genotype = if_else(str_detect(Subject, "^NT"), "NT", "Tg"),
        Dose_num = as.numeric(Dose),
        Dose = factor(Dose,
            levels = c("-13.65", "-13.95", "-14.19", "-14.36", "-14.49"),
            ordered = TRUE
        )
    ) |>
    drop_na(JO2)

```

```{r}
glimpse(data_long)
```

```{r}
#| label: histograms
#| fig-cap: [
#|   "Distribution of raw JO2 values",
#|   "Distribution of log10-transformed JO2 values"
#| ]
#| fig-alt: [
#|   "Histogram of raw oxygen consumption (JO2) values",
#|   "Histogram of log10 of oxygen consumption (JO2) values"
#| ]

# Raw JO2
hist(
    data_long$JO2,
    breaks = 60,
    main = "Distribution of Raw JO2 Values",
    xlab = "Oxygen Consumption (JO2, pmol/min)",
    ylab = "Frequency",
    col = "lightblue",
    border = "white"
)

# Log10-transformed JO2
hist(
    log10(data_long$JO2),
    breaks = 60,
    main = "Distribution of Log Transformed JO2 Values",
    xlab = "Log(Oxygen Consumption, JO2)",
    ylab = "Frequency",
    col = "lightgreen",
    border = "white"
)

data_long <- data_long |>
    mutate(logJO2 = log10(JO2))

```

```{r}
#| label: jo2-dose-plots
#| fig-cap: [
#|   "JO2 across dose by substrate and genotype",
#|   "Mean JO2 with ±SE by genotype and substrate"
#| ]
#| fig-alt: [
#|   "Line plot of individual subject trajectories over dose, colored by genotype and faceted by substrate",
#|   "Mean JO2 lines with standard error bars over dose, split by genotype and faceted by substrate"
#| ]
# Keep Dose numeric
data_long <- data_long |>
    mutate(Dose = as.numeric(as.character(Dose)))

# Get all unique doses
all_doses <- sort(unique(data_long$Dose))

summary_data <- data_long |>
    group_by(Substrate, Genotype, Dose) |>
    summarise(
        mean_JO2 = mean(JO2, na.rm = TRUE),
        se = sd(JO2, na.rm = TRUE) / sqrt(n()),
        .groups = "drop"
    )

# Plot individual lines with exact dose labels
ggplot(data_long, aes(x = Dose, y = JO2, color = Genotype, group = Subject)) +
    geom_line(alpha = 0.5) +
    facet_wrap(~Substrate, scales = "free_y", labeller = label_wrap_gen(width = 15)) +
    scale_x_continuous(breaks = all_doses) + # show all doses exactly
    theme_minimal() +
    labs(title = "JO2 across Dose by Substrate and Genotype") +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        strip.text = element_text(size = 9)
    )

# Plot genotype means ± SE with exact dose labels
ggplot(summary_data, aes(Dose, mean_JO2, color = Genotype, group = Genotype)) +
    geom_line() +
    geom_point() +
    geom_errorbar(aes(ymin = mean_JO2 - se, ymax = mean_JO2 + se), width = 0.1) +
    facet_wrap(~Substrate, scales = "free_y", labeller = label_wrap_gen(width = 15)) +
    scale_x_continuous(breaks = all_doses) + # show all doses exactly
    theme_minimal() +
    labs(title = "Mean JO2 ± SE", y = "Mean JO2") +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
        strip.text = element_text(size = 9)
    )

```

```{r}
#| label: baseline-bar
#| fig-cap: "Mean JO2 at Basal and low dose (-13.65)"
#| fig-alt: "Bar chart of mean JO2 comparing Basal to the lowest non-basal dose, by genotype and substrate"
data_long |>
    filter(Dose %in% c("Basal", "-13.65")) |>
    group_by(Genotype, Substrate, Dose) |>
    summarise(mean_JO2 = mean(JO2), se = sd(JO2) / sqrt(n()), .groups = "drop") |>
    ggplot(aes(x = Dose, y = mean_JO2, fill = Genotype)) +
    geom_col(position = position_dodge()) +
    geom_errorbar(aes(ymin = mean_JO2 - se, ymax = mean_JO2 + se),
        width = 0.2, position = position_dodge(0.9)
    ) +
    facet_wrap(~Substrate, scales = "free_y") +
    theme_minimal()
```

```{r}
#| label: slopes-box
#| fig-cap: "Distribution of JO2–dose slopes by genotype and substrate"
#| fig-alt: "Boxplots of linear regression slopes of JO2 versus dose for each subject, split by genotype across substrates"
slopes <- data_long |>
    group_by(Subject, Genotype, Substrate) |>
    do(tidy(lm(JO2 ~ Dose_num, data = .))) |>
    filter(term == "Dose_num")

ggplot(slopes, aes(x = Substrate, y = estimate, fill = Genotype)) +
    geom_boxplot(alpha = 0.6, position = position_dodge()) +
    theme_minimal() +
    labs(y = "Slope of JO2 vs Dose", title = "Respiratory sensitivity by Genotype") +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1, size = 10) # rotate labels
    )
```

```{r}
#| label: heatmap-mean
#| fig-cap: "Heatmap of mean JO2 across substrates and doses"
#| fig-alt: "Tile heatmap showing mean JO2 for each substrate and dose combination, faceted by genotype"
heat <- data_long |>
    group_by(Substrate, Dose, Genotype) |>
    summarise(mean_JO2 = mean(JO2), .groups = "drop")

ggplot(heat, aes(x = Dose, y = Substrate, fill = mean_JO2)) +
    geom_tile() +
    facet_wrap(~Genotype) +
    scale_fill_viridis_c() +
    theme_minimal() +
    labs(title = "Heatmap of mean JO2 across Substrates & Doses") +
    theme(
        axis.text.x = element_text(angle = 45, hjust = 1) # rotate x labels
    )
```

Linear model on raw JO2 & Diagnostics

```{r}

# Linear model on raw JO2, ignoring subject correlation
lm_raw <- lm(JO2 ~ Substrate * Dose, data = data_long)

# Model summary
summary(lm_raw)

# ANOVA table (Type I by default)
anova(lm_raw)

# Type II/III sums of squares:
Anova(lm_raw, type = 2) # Type II
Anova(lm_raw, type = 3) # Type III

```

Marginal Model

```{r}
# Marginal (group-level) model: JO2 by genotype only
lm_marginal <- lm(JO2 ~ Genotype, data = data_long)

# Summary and ANOVA
summary(lm_marginal)
anova(lm_marginal)

# Multiple regression with genotype, substrate, dose, and interactions
lm_multi <- lm(JO2 ~ Genotype * Substrate * Dose, data = data_long)

# Type II/III ANOVA (from car package)
library(car)
Anova(lm_multi, type = 2) # main effects after accounting for others
Anova(lm_multi, type = 3) # tests each term with all interactions

```

Mixed Model

```{r}
# Mixed model: random intercept for each mouse
lmm <- lmer(JO2 ~ Genotype * Substrate * Dose + (1 | Subject), data = data_long)

# Summary
summary(lmm)

# Type II/III tests for fixed effects
anova(lmm, type = 3) # Type III ANOVA table
```

Model Tables

```{r}
#| label: tbl-lm-raw-coefs
#| tbl-cap: "Linear model (JO2 ~ Substrate * Dose) coefficients"
#| echo: false
#| message: false
library(broom)
lm_raw_tidy <- tidy(lm_raw)
knitr::kable(lm_raw_tidy, digits = 3)
```

```{r}
#| label: tbl-lm-raw-anova
#| tbl-cap: "Type II ANOVA for JO2 ~ Substrate * Dose"
#| echo: false
anova_raw <- as.data.frame(Anova(lm_raw, type = 2))
anova_raw$Term <- rownames(anova_raw)
anova_raw <- dplyr::select(anova_raw, Term, dplyr::everything())
knitr::kable(anova_raw, digits = 3)
```

```{r}
#| label: tbl-lm-multi-anova
#| tbl-cap: "Type III ANOVA for JO2 ~ Genotype * Substrate * Dose"
#| echo: false
anova_multi <- as.data.frame(Anova(lm_multi, type = 3))
anova_multi$Term <- rownames(anova_multi)
anova_multi <- dplyr::select(anova_multi, Term, dplyr::everything())
knitr::kable(anova_multi, digits = 3)
```

```{r}
#| label: tbl-lmm-fixed
#| tbl-cap: "Mixed model fixed effects (lmer)"
#| echo: false
lmm_coef <- as.data.frame(coef(summary(lmm)))
lmm_coef$Term <- rownames(lmm_coef)
lmm_coef <- dplyr::select(lmm_coef, Term, Estimate, `Std. Error`, df, `t value`, `Pr(>|t|)`)
knitr::kable(lmm_coef, digits = 3,
             col.names = c("Term", "Estimate", "Std. Error", "df", "t value", "Pr(>|t|)"))
```

```{r}
#| label: tbl-model-fit
#| tbl-cap: "Model fit statistics"
#| echo: false
fit_tbl <- tibble::tibble(
  Model = c("lm_marginal", "lm_raw", "lm_multi", "lmm"),
  AIC = c(AIC(lm_marginal), AIC(lm_raw), AIC(lm_multi), AIC(lmm)),
  BIC = c(BIC(lm_marginal), BIC(lm_raw), BIC(lm_multi), BIC(lmm)),
  logLik = c(as.numeric(logLik(lm_marginal)), as.numeric(logLik(lm_raw)),
             as.numeric(logLik(lm_multi)), as.numeric(logLik(lmm))),
  DF_Residual = c(df.residual(lm_marginal), df.residual(lm_raw), df.residual(lm_multi), NA_integer_),
  N = nrow(data_long)
)
knitr::kable(fit_tbl, digits = 3)
```

```{r, warning=FALSE}
#| label: ggeffects-curves
#| fig-cap: "Predicted JO2 vs dose by substrate and genotype from mixed model"
#| fig-alt: "Model-predicted JO2 curves with confidence ribbons across dose, faceted by substrate and colored by genotype"
library(ggeffects)
library(ggplot2)

# Predictions across dose values for each genotype × substrate
pred <- ggpredict(lmm, terms = c("Dose [all]", "Genotype", "Substrate"))

# Plot fitted curves with CIs
ggplot(pred, aes(x = x, y = predicted, color = group)) +
    geom_line(size = 1) +
    geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2, color = NA) +
    facet_wrap(~facet, scales = "free_y") +
    theme_minimal() +
    labs(
        title = "Fitted JO2 vs Dose by Substrate and Genotype",
        x = "Dose (ΔGATP)", y = "Predicted JO2",
        color = "Genotype", fill = "Genotype"
    )
```

```{r}
#| label: emm-heatmap
#| fig-cap: "Genotype effect (Tg – NT) across substrates and doses"
#| fig-alt: "Heatmap of estimated Tg minus NT differences in JO2 across substrates and doses"
library(emmeans)
library(dplyr)

# Estimated marginal means for each Substrate × Dose × Genotype
emm <- emmeans(lmm, ~ Genotype | Substrate * Dose)

# Compute differences Tg – NT
contrast_df <- contrast(emm, method = "revpairwise") %>%
    as.data.frame()

# Plot heatmap
ggplot(contrast_df, aes(x = Dose, y = Substrate, fill = estimate)) +
    geom_tile() +
    scale_fill_gradient2(
        low = "blue", mid = "white", high = "red", midpoint = 0,
        name = "Tg – NT difference"
    ) +
    theme_minimal() +
    labs(
        title = "Genotype Effect (Tg – NT) across \
       Substrates and Doses",
        x = "Dose (ΔGATP)", y = "Substrate"
    )
```

```{r}
#| label: tbl-emm-contrasts
#| tbl-cap: "Estimated genotype differences (Tg – NT) by substrate and dose"
#| echo: false
emm_tab <- contrast_df |>
  dplyr::select(Substrate, Dose, estimate, SE, df, t.ratio, p.value)
knitr::kable(emm_tab, digits = 3,
             col.names = c("Substrate", "Dose", "Estimate", "SE", "df", "t", "p"))
```

```{r}
#| label: diag-plots
#| fig-cap: [
#|   "Residuals versus fitted values for mixed model",
#|   "QQ plot of mixed model residuals"
#| ]
#| fig-alt: [
#|   "Scatterplot of Pearson residuals against fitted values with reference line at zero",
#|   "Normal Q-Q plot comparing residual quantiles to theoretical normal quantiles"
#| ]
plot(lmm, resid(., type = "pearson") ~ fitted(.), abline = 0)

# QQ plot
qqnorm(resid(lmm))
qqline(resid(lmm))
```
